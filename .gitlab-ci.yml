stages:
- deploy_services

before_script:
  - chmod 400 $SSH_KEY
  - apt-get update && apt-get install -y postgresql-client
deploy:
  stage: deploy_services
  variables:
    TARGET_DIR: "trading-core-infra"
  script:
    - echo "MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD" >> .env
    - echo "POSTGRES_PASSWORD=$POSTGRES_PASSWORD" >> .env
    - echo "PORTAINER_PASSWORD=$PORTAINER_PASSWORD" >> .env
    - echo "POSTGRES_USER=$POSTGRES_USER" >> .env
    - echo "POSTGRES_DB_NAME=$POSTGRES_DB_NAME" >> .env
    - mkdir -p logs
#    - mkdir -p $TARGET_DIR
    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY root@$MAIN_SERVER "mkdir -p ${TARGET_DIR}"
    - scp -prq -o StrictHostKeyChecking=no -i $SSH_KEY ./* root@$MAIN_SERVER:~/$TARGET_DIR
    - scp -q -o StrictHostKeyChecking=no -i $SSH_KEY .env root@$MAIN_SERVER:~/$TARGET_DIR/.env
    - echo "Migrate TimescaleDB..."
    - export PGPASSWORD=$POSTGRES_PASSWORD
    - psql -h $MAIN_SERVER -U $POSTGRES_USER -W -d $POSTGRES_DB_NAME -f ./migration/timescale/schema_last.sql
    - echo "Use 'make rebuild' to update services"
#    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY root@$MAIN_SERVER "
#      cd \"$TARGET_DIR\" &&
#      docker-compose build &&
#      docker-compose down &&
#      docker-compose up -d "